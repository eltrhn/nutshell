@RULE bml
********************************
**** COMPILED FROM NUTSHELL ****
****         v0.6.2         ****
********************************
The Biham–Middleton–Levine traffic model.

0: Road
1: Downward-bound car, moving
2: Rightward-bound car, moving
3: Downward-bound car, waiting
4: Rightward-bound car, waiting

Generation 0 will consist only of states 0, 2, 3.


@TABLE
neighborhood: vonNeumann
symmetries: none
n_states: 5

var any.0 = {0,1,2,3,4}
var any.1 = any.0
var any.2 = any.0
var any.3 = any.0
var live.0 = {1,2,3,4}

# A waiting car starts moving on the next tick
#### line 19: wait, N..W any; [0: move] ####
3, any.0, any.1, any.2, any.3, 1
4, any.0, any.1, any.2, any.3, 2
# A downward-bound car moves down if the cell below it is 0, else stays put and becomes a 'waiting'
#### line 22: 1, N..W any; [S: (0, 3, ...)] ####
1, any.0, any.1, 0, any.2, 0
1, any.0, any.1, live.0, any.2, 3
#### line 22: S[(3, _, ...)] ####
0, 1, any.0, any.1, any.2, 3
# A rightward-bound car moves right if it can, else ditto
#### line 24: 2, N..W any; [E: (0, 4, ...)] ####
2, any.0, 0, any.1, any.2, 0
2, any.0, live.0, any.1, any.2, 4
#### line 24: E[(4, _, ...)] ####
0, any.0, any.1, any.2, 2, 4

@COLORS
0 255 255 255
1 0 0 255
3 0 0 255
2 255 0 0
4 255 0 0
